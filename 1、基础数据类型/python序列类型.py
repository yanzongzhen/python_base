#序列类型
'''
序列类型：
    1、字符串
    2、列表
    3、元组

    可变序列：list
    不可变序列：tuple str
'''
f = '人生苦短，我用python'
type(f) #<class 'str'>

g = "他说'aa'"
g = '''aaa'''
g = """aaa""" #都是三引号

g = """ aaabbb  
"""          #三引号可以换行

"""
"这是一个字符串"
"""
'''
写注释
# 后面的代码都会被注释掉  单行注释
引号可以注释 单引号  双引号 三引号
'''
h = 'hhh' #注释
l = 'lll'

j = 'jj';'注释';k = 'kk' #;这行结束  相当于回车

#列表list
li = [1,2,3]
#列表 利用[]括起来，这些元素为列表元素，元素之间逗号分隔

#元组 tuple
tu = (1,2)
tu = 3,4,5

#类型转换
s = str(li)  #str声明一个字符串新对象
l = list(f)  #list声明新的列表
t = tuple(f)

#以上通过类型转换得到一个序列类型

#定义空类型
s1 = ''
l1 = []
t1 = ()
#特殊情况
t2 = (1,) #只有一个加逗号

#tuple  list 对象要可迭代 

###序列---有顺序
#索引值  位置的值为索引值

len(f)      #计算出序列长度
f[0]        #取位置0的元素

#切片
f[0:3]
f[1:3]
f[0:10:2]  #第二个冒号代表步长

f[:10]  #默认0开始 f[0:10]
f[1:]   #默认到末尾 f[1:12]   
f[::2]

#列表和元组同字符串
li[:]
li[::2]

#最后一个是  -1  -0 = 0
li[-1]      #反过来取

f[3:10:-2] #步长为负  返回空的对象
f[10:3:-2]
f[15:]
li[15:] #切片时超出范围  返回空不会报错

# +   += -->  f += f ==> f = f + f 
f + f
li + li
tu + tu
f += f

# *   *= 重复
f *= 3


#成员检查
'我' in f
'人' not in f








